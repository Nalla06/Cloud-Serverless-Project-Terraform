name: Deploy Serverless App

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  S3_BUCKET: your-react-frontend-bucket-name
  TERRAFORM_DIR: ./terraform

jobs:
  deploy-backend:
    name: Deploy Backend Infrastructure & Lambdas
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build Lambda functions
        working-directory: ./backend
        run: |
          GOOS=linux GOARCH=amd64 go build -o main ./modules/checkout
          zip function.zip main
          # Repeat for other lambdas or automate packaging

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform init

      - name: Terraform Apply
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform apply -auto-approve

  deploy-frontend:
    name: Deploy Frontend React App
    runs-on: ubuntu-latest
    needs: deploy-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies and build
        working-directory: ./frontend
        run: |
          npm install
          npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Sync S3 bucket
        run: aws s3 sync ./frontend/build s3://${{ env.S3_BUCKET }} --delete
